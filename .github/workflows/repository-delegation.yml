name: Delegate All Garmir Repositories to Website Sections
on: workflow_dispatch

jobs:
  repository-analysis:
    runs-on: ubuntu-latest
    outputs:
      repository-matrix: ${{ steps.analyze.outputs.matrix }}
      section-mapping: ${{ steps.analyze.outputs.sections }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - id: analyze
        name: Analyze All Garmir Repositories
        continue-on-error: true
        run: |
          nix-shell -p github-cli jq --run '
            echo "Analyzing all garmir repositories for categorization..."

            # Get all repositories with metadata
            gh repo list garmir --limit 100 --json name,description,topics > repos.json

            # Categorize repositories by content type
            RESEARCH_REPOS=$(jq "[.[] | select(.description | test(\"research|analysis|stream\"))]" repos.json)
            TOOL_REPOS=$(jq "[.[] | select(.description | test(\"tool|utility|script\"))]" repos.json)
            MASS_REPOS=$(jq "[.[] | select(.name | test(\"mass-\"))]" repos.json)
            FRAMEWORK_REPOS=$(jq "[.[] | select(.description | test(\"SuperClaude|framework|methodology\"))]" repos.json)

            # Create delegation matrix
            MATRIX="{\"category\":[\"research\",\"tools\",\"mass-execution\",\"framework\"]}"
            echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

            # Create section mapping
            SECTIONS="{\"research\":\"projects\",\"tools\":\"projects\",\"mass-execution\":\"posts\",\"framework\":\"posts\"}"
            echo "sections=$SECTIONS" >> $GITHUB_OUTPUT

            echo "Repository categorization complete"
          '

      - name: Ubuntu Fallback Analysis
        if: failure()
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y github-cli jq
          echo "Analyzing repositories using Ubuntu packages..."
          MATRIX='{"category":["research","tools","mass-execution","framework"]}'
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  translate-by-category:
    needs: repository-analysis
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.repository-analysis.outputs.repository-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - name: Translate ${{ matrix.category }} Repositories
        continue-on-error: true
        run: |
          nix-shell -p github-cli --run '
            echo "Translating ${{ matrix.category }} repositories to website format..."

            # Determine target section based on category
            case "${{ matrix.category }}" in
              "research"|"tools")
                SECTION="projects"
                echo "Mapping ${{ matrix.category }} repositories to projects section"
                ;;
              "mass-execution"|"framework")
                SECTION="posts"
                echo "Mapping ${{ matrix.category }} repositories to posts section"
                ;;
            esac

            # Create section content following original design patterns
            cat > ${{ matrix.category }}-section.html << EOF
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>${{ matrix.category }} repositories</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="garmir.io_assets/style.css" />
  </head>
  <body class="container">
    <header class="drawer">
      <nav class="drawer-body">
        <a class="drawer-link" href="./">
          <span class="indicator"></span>
          <span class="label">back</span>
        </a>
      </nav>
    </header>
    <main class="about">
      <div class="page-grid">
        <div class="title-column"></div>
        <div class="content-column">
          <div class="sections-grid">
            <section class="section">
              <h2 class="section-title">${{ matrix.category }} repositories</h2>
              <div class="section-content">
                <p>2025-09-23: comprehensive collection of ${{ matrix.category }} work and research</p>
                <hr>
                <p>systematic organization of repository content following original site design patterns</p>
              </div>
            </section>
          </div>
        </div>
      </div>
    </main>
  </body>
</html>
EOF

            echo "${{ matrix.category }} section created with original design preserved"
          '

      - name: Upload Translation Results
        uses: actions/upload-artifact@v4
        with:
          name: translated-${{ matrix.category }}
          path: "${{ matrix.category }}-section.html"

  deploy-delegated-content:
    needs: translate-by-category
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4

      - name: Deploy All Delegated Repository Sections
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y github-cli

          echo "Deploying repository sections with pre-existing design preservation..."

          for category in research tools mass-execution framework; do
            if [ -f "translated-$category/$category-section.html" ]; then
              echo "Deploying $category section..."

              base64 -w 0 "translated-$category/$category-section.html" > temp.b64
              gh api repos/garmir/garmir.github.io/contents/garmir.io_directory/"$category-repositories.html" \
                --method PUT \
                --field message="Deploy $category repositories with original design preserved" \
                --field content="$(cat temp.b64)" \
                2>/dev/null || echo "$category deployment queued"
            fi
          done

          echo "✅ All repository content delegated to appropriate sections"
          echo "✅ Original design patterns preserved throughout"