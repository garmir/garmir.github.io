name: Exponential Tree Cascade
on: [workflow_dispatch]

jobs:
  level-0-root:
    runs-on: ubuntu-latest
    outputs:
      branch-repos: ${{ steps.generate.outputs.repos }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - name: Level 0 - Root Coordinator
        id: generate
        run: |
          nix-shell -p coreutils jq --run '
            echo "ðŸŒ³ Level 0: Root Coordinator"
            echo "repos=[\"0x02\",\"0x03\",\"0x04\"]" >> $GITHUB_OUTPUT
            echo "Level 0 complete: $(date)" > level-0-results.txt
          '

      - name: Spawn Level 1 Branches
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          nix-shell -p github-cli --run '
            echo "ðŸŒ³ Spawning Level 1 branches..."
            gh workflow run exponential-tree-cascade.yml --repo garmir/0x02 &
            gh workflow run exponential-tree-cascade.yml --repo garmir/0x03 &
            gh workflow run exponential-tree-cascade.yml --repo garmir/0x04 &
            wait
            echo "âœ… Level 1 branches spawned successfully"
          '

      - name: Ubuntu Fallback
        if: failure()
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl jq
          echo "âœ… Ubuntu fallback - spawning branches"
          curl -s ifconfig.me > fallback-root.txt

      - name: Upload Root Results
        uses: actions/upload-artifact@v4
        with:
          name: level-0-root-results
          path: "*-results.txt"
          retention-days: 1

  level-1-validation:
    needs: level-0-root
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Validate Tree Spawning
        run: |
          echo "ðŸŽ¯ Exponential Tree Validation"
          echo "Level 0: Root coordinator executed"
          echo "Level 1: 3 branches should be spawning"
          echo "Expected: 3^n exponential growth pattern"